#!/bin/sh
#
# sigmet_svg --
#	Send an image of a sweep to standard output.
#
# Usage:
#	sigmet_svg data_type sweep_index socket
# where:
#	data_type	- data type (e.g. DB_DBZ, DB_ZDR).
#	sweep_index	- index of sweep in volume. First sweep is 0.
#	socket		- socket that communicates with a sigmet_raw daemon.
#
# Environment variables:
#	SIGMET_RAW_X0		- x coordinate of svg element
#	SIGMET_RAW_Y0		- x coordinate of svg element
#	SIGMET_RAW_PROJ		- command that reads longitude latitude
#				  values from standard input and prints
#				  x y values to standard output.
#				  Must be set for ppi sweeps.
#				  Not used for rhi sweeps.
#	SIGMET_RAW_COLORS	- path to directory with color table
#				  files. For each data type DB_XXX
#				  this directory must contain a file
#				  named DB_XXX.clrs with output from
#				  the raster_clrs program appropriate
#				  for the data type. Defaults to
#				  current working directory.
#
# The svg code for the image goes to standard output.  Output coordinates will
# be regular cartesian coordinates with origin  at (x_min_m, y_min_m), x
# increasing to the right, and y increasing upward.  All distances are meters.
# Output should be wrapped in svg code that imposes suitable scaling, offsets,
# and transformations for the display (recall that svg starts assuming y
# increases downward from top of image).
#
# Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#     * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Please send feedback to dev0@trekix.net

# Parse command line
if [ $# -ne 3 ]
then
    echo Usage: $0 data_type sweep_index socket 1>&2
    exit 1
fi
data_type=$1
sweep_index=$2
sock="$3"
color_dir=${SIGMET_RAW_COLORS:-"."}
color_fl=${color_dir}/${data_type}.clrs
if ! test -f "$color_fl"
then
    echo "Could not find color file $color_fl" 1>&2
    exit 1
fi

# Get volume headers
eval `sigmet_raw vol_hdr "$sock"`
if [ $scan_mode != "ppi" ]
then
    echo The volume at $sock is not a RHI
    exit 1
fi

# Location of svg element in parent
x0=${SIGMET_RAW_X0:-"0.0"}
y0=${SIGMET_RAW_Y0:-"0.0"}

# Image size in meters
img_width_m=`echo "$x_max_m - $x_min_m" | bc -l`
img_height_m=`echo "$y_max_m - $y_min_m" | bc -l`

# Print an svg element for the sweep.
printf '<svg\n'
printf '  x="%.0f"\n' $x0
printf '  y="%.0f"\n' $y0
printf '  width="%.0f"\n' $img_width_m
printf '  height="%.0f"\n' $img_height_m
printf '  viewBox="0 0 %.0f %.0f"\n' $img_width_m $img_height_m
printf '>\n'
printf '<desc>%s %s' "$site_name" $data_type
sweep_hdr=`sigmet_raw sweep_headers $sock \
	  | egrep 'sweep +'${sweep_index}' ' | sed 's/  */ /g'`
printf ' %s degrees</desc>\n' "$sweep_hdr"
cat $color_fl \
| egrep '([0-9.+-]+|INF|inf) #[0-9A-Fa-f]+ ([0-9.e+-]+|INF|inf)' \
| while read min color max
do
    printf "<path style=\"fill: %s;\" d=\"\n" $color;
    sigmet_raw outlines $data_type $sweep_index $min $max - "$sock" \
    | $proj_cmd \
    | awk -v x_min_m=$x_min_m -v y_max_m=$y_max_m '
	{
	    printf "M %.0f %.0f ", $1 - x_min_m, $2 - y_min_m;
	    getline
	    printf "L %.0f %.0f ", $1 - x_min_m, $2 - y_min_m;
	    getline
	    printf "L %.0f %.0f ", $1 - x_min_m, $2 - y_min_m;
	    getline
	    printf "L %.0f %.0f Z\n", $1 - x_min_m, $2 - y_min_m;
	}'
    printf "\"/>\n"
done
printf "</svg>\n"
exit 0
