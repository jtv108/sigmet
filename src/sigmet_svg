#!/bin/sh
#
# sigmet_svg --
#	Create a SVG element for a Sigmet sweep.
#
# Requires sigmet_raw, sig_raw, and sigmet_svg.awk.
#
# Usage:
#	sigmet_svg [-f] [-b x_min=value,x_max=value,y_min=value,y_max=value]
#		-- data_type color_fl sweep_angle in
# where:
#	-f		- fill gaps between adjacent rays.
#	-b		- Limits of plot in plot coordinates (not display
#			  coordinates). bounds must be a string of form
#			  x_min=value,x_max=value,y_min=value,y_max=value
#			  Does not have to give all values. For values not
#			  given, default is to use sweep limits. Distance units
#			  are determined by "sigmet_raw sweep_bnds" and
#			  "sigmet_raw outlines" commands. See sigmet_raw (1).
#	data_type	- data type (e.g. DB_DBZ, 'DB_DBZ,DB_ZDR').
#	color_fl	  color file. Format must be that of raster_clrs
#			  output. See raster_clrs (1).
#	sweep_angle	- desired tilt or azimuth. Image will show sweep
#			  nearest sweep_angle.
#	in		- fifo from which a sigmet_raw process in daemon mode
#			  is reading commands. See sigmet_raw (1).
#
# Copyright (c) 2014, Gordon D. Carrie. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#     * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Please send feedback to dev0@trekix.net
#
#	$Revision: $ $Date: $

# This function checks whether a value is a number
check_num() {
    name="$1"
    val="$2"
    if ! test $val
    then
	printf "%s not set\n" "$name" 1>&2
	exit 1
    fi
    if ! printf '%g' $val > /dev/null 2>&1
    then
	printf "$0: expected number for %s, got %s\n" "$name" "$val" 1>&2
	exit 1
    fi
}

# Parse command line
while getopts :fb: opt
do
    case "$opt"
    in
	f)
	    fill="-f"
	    ;;
	b)
	    eval `echo "$OPTARG" | sed 's/,/;/g'`
	    ;;
	\?)
	    echo "$0: unknown option $OPTARG" 1>&2
	    exit 1
	    ;;
    esac
done
shift `expr $OPTIND - 1`
if [ $# -ne 4 ]
then
    {
	printf "Usage: $0 [-f]"
	printf " [-b x_min=value,x_max=value,y_min=value,y_max=value]"
	printf " -- data_type color_fl sweep_angle in\n"
    } 1>&2
    exit 1
fi
data_type="$1"
color_fl="$2"
sweep_angle="$3"
in="$4"

# Pass commands to sigmet_raw daemon fifo via the sig_raw script.
# See the documentation in sig_raw.
if ! test -p $in
then
    echo $0: $SIGMET_RAW_IN is not a fifo 1>&2
    exit 1
fi
export SIGMET_RAW_IN=$in

# Assign sweep bounds to x_min, x_max, y_min, and y_max if not set from
# command line.
sweep_index=`sig_raw near_sweep $sweep_angle`
eval `sig_raw sweep_bnds $sweep_index \
| awk '
    /x_min/ { printf "x_min_bnd=%f\n", $2; }
    /x_max/ { printf "x_max_bnd=%f\n", $2; }
    /y_min/ { printf "y_min_bnd=%f\n", $2; }
    /y_max/ { printf "y_max_bnd=%f\n", $2; }
'`
x_min=${x_min:-${x_min_bnd}}; check_num "sweep x min" $x_min
x_max=${x_max:-${x_max_bnd}}; check_num "sweep x max" $x_max
y_min=${y_min:-${y_min_bnd}}; check_num "sweep y min" $y_min
y_max=${y_max:-${y_max_bnd}}; check_num "sweep y max" $y_max
dx=`echo "$x_max - $x_min" | bc -l`
dy=`echo "$y_max - $y_min" | bc -l`

# Create outlines and convert to SVG elements.
sig_raw outlines $fill $data_type $color_fl $sweep_index | sigmet_svg.awk

exit 0
