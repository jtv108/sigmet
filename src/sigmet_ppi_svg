#!/bin/sh
#
# sigmet_ppi_svg --
#	Print PPI bin outlines as SVG polygons.
#
# Usage:
#	sigmet_svg data_type sweep_index socket
# where:
#	data_type	- data type (e.g. DB_DBZ, DB_ZDR).
#	sweep_index	- index of sweep in volume. First sweep is 0.
#	socket		- socket created by a call to "sigmet_raw load ..."
#
# sigmet_raw_proj, sigmet_raw_ppi_bnds, and cart_svg must be in current path.
#
# Environment variables:
#	SIGMET_RAW_COLORS	- (optional) path to directory with color
#				  table files. For each data type DB_XXX
#				  this directory must contain a file
#				  named DB_XXX.clrs with output from
#				  the raster_clrs program appropriate
#				  for the data type. Defaults to
#				  current working directory.
#	SIGMET_RAW_IMG_SZ	- (optional) image width, pixels
#
# The SVG code goes to standard output.
#
# Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#     * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Please send feedback to dev0@trekix.net

# Parse command line
if [ $# -eq 3 ]
then
    data_type=$1
    sweep_index=$2
    sock="$3"
else
    echo Usage: $0 data_type sweep_index socket 1>&2
    exit 1
fi
w_px=${SIGMET_RAW_IMG_SZ:-"800"}

# Assign volume header information to shell variables
eval `sigmet_raw vol_hdr "$sock"`

# Ensure volume is ppi
if ! echo $scan_mode | grep -q "ppi"
then
    echo $0: volume at $sock is not a PPI
    exit 1
fi

# Locate color table file
color_dir=${SIGMET_RAW_COLORS:-"."}
color_fl=${color_dir}/${data_type}.clrs
if ! test -f "$color_fl"
then
    echo "$0: could not find color file $color_fl" 1>&2
    exit 1
fi

# Determine and test projection command
proj_cmd=`sigmet_raw_proj $sock`
if ! test "$proj_cmd"
then
    echo Could not determine a projection 1>&2
    exit 1
fi
if ! $proj_cmd < /dev/null > /dev/null
then
    echo Projection command \"$proj_cmd\" does not work 1>&2
    exit 1
fi

# Determine boundaries of sweep
if ! test $X_MAX_M || ! test $X_MIN_M || ! test $Y_MAX_M || ! test $Y_MIN_M
then
    eval `sigmet_ppi_bnds $sweep_index "$proj_cmd" "$sock"`
fi

# Send beginning of SVG code
printf '<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
    "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
'

# Set up svg element for ppi
w=`echo $X_MAX_M - $X_MIN_M | bc -l`
h=`echo $Y_MAX_M - $Y_MIN_M | bc -l`
SVG_ATT=\
'xmlns="http://www.w3.org/2000/svg"
    xmlns:xlink="http://www.w3.org/1999/xlink"'
export SVG_ATT
cart_svg $X_MIN_M $Y_MIN_M $w $h $w_px

# Make polygons for ppi bins
awk '
    BEGIN {
	max = "nan"
    }
    /^[0-9.+-]+|INF|inf #[0-9A-Fa-f]+/ {
	if (max == "nan") {
	    min = $1;
	    color = $2;
	    printf "%s %s ", min, color
	} else {
	    max = $1;
	    printf "%s\n", max
	    color = $2;
	    min = max;
	    if ( color != "" ) {
		printf "%s %s ", min, color
	    }
	};
	max = min;
    }' $color_fl							\
| while read min color max
do
    printf "<path style=\"fill: %s;\" d=\"\n" $color;
    sigmet_raw outlines $data_type $sweep_index $min $max - "$sock"	\
    | $proj_cmd								\
    | awk '
	{
	    printf "M %.0f %.0f ", $1, $2;
	    getline
	    printf "L %.0f %.0f ", $1, $2;
	    getline
	    printf "L %.0f %.0f ", $1, $2;
	    getline
	    printf "L %.0f %.0f Z\n", $1, $2;
	}'
    printf "\"/>\n"
done

# Close elements
printf '</g>\n</svg>\n'

exit 0
