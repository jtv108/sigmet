#!/bin/sh
#
# sigmet_ppi_kml --
#	Print KML code for a sweep
#
# Usage:
#	sigmet_svg sweep_index socket
# where:
#	sweep_index	- index of sweep in volume. First sweep is 0.
#	socket		- socket created by a call to "sigmet_raw load ..."
#
# sigmet_raw_proj and sigmet_raw_ppi_bnds must be in current path.
#
# The KML code goes to standard output.
#
# Copyright (c) 2012, Gordon D. Carrie. All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 
#     * Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Please send feedback to dev0@trekix.net

# Parse command line
if [ $# -eq 2 ]
then
    sweep_index=$1
    sock="$2"
else
    echo Usage: $0 sweep_index socket 1>&2
    exit 1
fi

# Assign volume header information to shell variables
eval `sigmet_raw vol_hdr "$sock"`

# Ensure volume is ppi
if ! echo $scan_mode | grep -q "ppi"
then
    echo $0: volume at $sock is not a PPI
    exit 1
fi

# KML format. Include Icon element, but do not give it a value.
kml_tmpl='<?xml version="1.0" encoding="UTF-8"?>
<kml xmlns="http://www.opengis.net/kml/2.2">
  <GroundOverlay>
    <name>%s</name>
    <description>%s</description>
    <LatLonBox>
      <north>%.5f</north>
      <south>%.5f</south>
      <west>%.5f</west>
      <east>%.5f</east>
    </LatLonBox>
    <Icon></Icon>
  </GroundOverlay>
</kml>'

# Determine and test projection command.
proj_cmd=`sigmet_raw_proj $sock`
if ! test "$proj_cmd"
then
    echo Could not determine a projection 1>&2
    exit 1
fi
if ! $proj_cmd < /dev/null > /dev/null
then
    echo Projection command \"$proj_cmd\" does not work 1>&2
    exit 1
fi


# Get site name from volume headers
# Get sweep time and angle from sweep headers.
# If necessary, get sweep boundaries with sigmet_ppi_bnds command.
site=`sigmet_raw volume_headers "$sock" \
     | awk -F \| '/su_site_name/ {print $1}'`
eval `sigmet_raw sweep_headers "$sock" | awk '
    /sweep +'$s' / {
	printf "sweep_time=\"%s %s\"\nsweep_angle=%f\n", $3, $4, $5
    }'`
if ! test $X_MAX_M || ! test $X_MIN_M || ! test $Y_MAX_M || ! test $Y_MIN_M
then
    eval `sigmet_ppi_bnds $sweep_index "$proj_cmd" "$sock"`
fi


# Print KML
name="`printf '%s sweep' $site`"
descr="`printf "%s at %s %s %04.1f degrees" \
	$site $sweep_time $sweep_angle`"
printf "$kml_tmpl" "$name" "$descr" $north $south $west $east
