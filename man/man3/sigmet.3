.\"
.\" Copyright (c) 2004 Gordon D. Carrie
.\" All rights reserved.
.\"
.\" Please send feedback to dev0@trekix.net
.\"
.\" $Revision: 1.16 $ $Date: 2010/12/06 21:54:55 $
.TH sigmet 1 Sigmet "Sigmet C functions"
.SH NAME
Sigmet_DataTypeN, Sigmet_DataType_Abbrv, Sigmet_DataType_Descr, Sigmet_DataType_Unit, Sigmet_NoData, Sigmet_IsData, Sigmet_IsNoData, Sigmet_DataType_ItoF, Sigmet_Bin4Rad, Sigmet_Bin2Rad, Sigmet_RadBin4, Sigmet_RadBin2, Sigmet_Vol_Init, Sigmet_Vol_Free, Sigmet_Vol_Good, Sigmet_Vol_ReadHdr, Sigmet_Vol_PrintHdr, Sigmet_Vol_Read, Sigmet_Vol_BadRay, Sigmet_Vol_BinOutl, Sigmet_Vol_ToDorade \- read Sigmet raw data
.SH VERSION
1
.SH SYNOPSIS
.nf
\fB#include <sigmet.h>\fP
\fBenum Sigmet_DataTypeN Sigmet_DataTypeN(char\fP *\fIa\fP\fB);\fP
\fBchar *Sigmet_DataType_Abbrv(enum Sigmet_DataTypeN\fP \fIy\fP\fB);\fP
\fBchar *Sigmet_DataType_Descr(enum Sigmet_DataTypeN\fP \fIy\fP\fB);\fP
\fBchar *Sigmet_DataType_Unit(enum Sigmet_DataTypeN\fP \fIy\fP\fB);\fP
\fBfloat Sigmet_NoData(void\fP\fB);\fP
\fBint Sigmet_IsData(float\fP \fIv\fP\fB);\fP
\fBint Sigmet_IsNoData(float\fP \fIv\fP\fB);\fP
\fBfloat Sigmet_DataType_ItoF(enum Sigmet_DataTypeN\fP \fIy\fP, \fBstruct Sigmet_Vol\fP \fIv\fP,
	\fBunsigned\fP \fIi\fP\fB);\fP
\fBdouble Sigmet_Bin4Rad(unsigned long\fP \fIb\fP\fB);\fP
\fBdouble Sigmet_Bin2Rad(unsigned short\fP \fIb\fP\fB);\fP
\fBunsigned long Sigmet_RadBin4(double\fP \fIa\fP\fB);\fP
\fBunsigned long Sigmet_RadBin2(double\fP \fIa\fP\fB);\fP
\fBvoid Sigmet_Vol_Init(struct Sigmet_Vol\fP *\fIvol_p\fP\fB);\fP
\fBvoid Sigmet_Vol_Free(struct Sigmet_Vol\fP *\fIvol_p\fP\fB);\fP
\fBint Sigmet_Vol_Good(FILE\fP *\fIf\fP\fB);\fP
\fBenum Sigmet_Status Sigmet_Vol_ReadHdr(FILE\fP *\fIf\fP, \fBstruct Sigmet_Vol\fP *\fIvol_p\fP\fB);\fP
\fBvoid Sigmet_Vol_PrintHdr(FILE *\fP \fIf\fP, \fBstruct Sigmet_Vol *\fP\fIvol_p\fP);
\fBenum Sigmet_Status Sigmet_Vol_Read(FILE\fP *\fIf\fP, \fBstruct Sigmet_Vol\fP *\fIvol_p\fP\fB);\fP
\fBint Sigmet_Vol_BadRay(struct Sigmet_Vol\fP *\fIvol_p\fP, \fBint\fP \fIs\fP, \fBint\fP \fIr\fP\fB);\fP
\fBenum Sigmet_Status Sigmet_Vol_BinOutl(struct Sigmet_Vol\fP *\fIvol_p\fP, \fBint\fP \fIs\fP, \fBint\fP \fIr\fP, \fBint\fP \fIb\fP, \fBdouble\fP *\fIll\fP\fB);\fP
\fBenum Sigmet_Status Sigmet_Vol_ToDorade(struct Sigmet_Vol\fP *\fIvol_p\fP, \fBint\fP \fIs\fP, \fBstruct Dorade_Sweep *\fP\fIswp_p\fP\fB);\fP
.fi
.SH DESCRIPTION
These functions read and access data obtained from Sigmet raw product
volumes.  The functions, structures, and nomenclature are based on
the \fBIRIS Programmer's Manual, September 2002\fP.
.SH SIGMET DATA TYPES
A Sigmet data type is identified by an integer constant which must
be member of:
.ne 10v
.nf

\fBenum Sigmet_DataTypeN {
    DB_XHDR,    DB_DBT,         DB_DBZ,         DB_VEL,         DB_WIDTH,
    DB_ZDR,     DB_DBZC,        DB_DBT2,        DB_DBZ2,        DB_VEL2,
    DB_WIDTH2,  DB_ZDR2,        DB_RAINRATE2,   DB_KDP,         DB_KDP2,
    DB_PHIDP,   DB_VELC,        DB_SQI,         DB_RHOHV,       DB_RHOHV2,
    DB_DBZC2,   DB_VELC2,       DB_SQI2,        DB_PHIDP2,      DB_LDRH,
    DB_LDRH2,   DB_LDRV,        DB_LDRV2,       DB_UNK
};\fP

.fi
The first 28 types are defined in the Sigmet Programmer's Manual.
Type \fBDB_UNK\fP means unknown or erroneous data type.
.PP
\fBSigmet_DataType\fP returns the Sigmet data type enumerator corresponding
to short abbreviation \fIa\fP. If there is none, it returns DB_DBL, meaning
the type is user defined, so there is no Sigmet defined conversion.
.PP
\fBSigmet_DataType_Abbrv\fP returns a short abbreviation describing
type \fIy\fP.  \fBSigmet_DataType_Descr\fP returns a longer
description.  \fBSigmet_DataType_Unit\fP returns a physical unit. Return values
of these functions should not be modified by the user.
.PP
\fBSigmet_NoData\fP returns a value indicating missing of invalid data.
\fBSigmet_IsData\fP returns true if \fIv\fP is not the return value from
\fBSigmet_NoData\fP.
\fBSigmet_IsNoData\fP returns true if \fIv\fP is the return value from
\fBSigmet_NoData\fP.
.PP
\fBSigmet_DataType_ItoF\fP returns a measurement value corresponding
to integer storage value \fIi\fP from volume \fIv\fP, using the conversion
method for data type \fIy\fP.
.PP
\fBSigmet_Bin4Rad\fP returns the angle in radians corresponding to Sigmet four
byte binary angle \fIb\fP.
.PP
\fBSigmet_Bin2Rad\fP returns the angle in radians corresponding to Sigmet two
byte binary angle \fIb\fP.
.PP
\fBSigmet_RadBin4\fP returns the Sigmet four byte binary angle
\fIa\fP corresponding to angle in radians.
.PP
\fBSigmet_RadBin2\fP returns the Sigmet two byte binary angle
\fIa\fP corresponding to angle in radians.
.SH SIGMET RAW VOLUMES
Data from Sigmet raw product volumes are stored in structures of
type \fBstruct\ Sigmet_Vol\fP, which is declared in \fBsigmet.h\fP.
.PP
\fBSigmet_Vol_Init\fP initializes a Sigmet volume structure at
\fIvol_p\fP, whose previous contents are assumed to be garbage.
Upon return, \fIvol_p\fP can be safely passed to \fBSigmet_Vol_Free\fP.
.PP
\fBSigmet_Vol_Free\fP frees memory associated with a Sigmet volume
structure at \fIvol_p\fP and reinitializes the structure.
.PP
\fBSigmet_Vol_Good\fP returns true if the file at \fIf\fP is a readable
Sigmet raw product volume.
.PP
\fBSigmet_Vol_ReadHdr\fP reads and stores volume headers for a Sigmet raw product
file from stream \fIf\fP into the volume structure at \fIvol_p\fP.
\fIf\fP should be at the start of a raw product file.  \fIvol_p\fP
should have been initialized at least once with a call to \fBSigmet_Vol_Init\fP.
Upon entry, \fBSigmet_Vol_ReadHdr\fP will free the contents of \fIf\fP with a call
to \fBSigmet_Vol_Free\fP.  This function only reads volume headers. Sweep headers
and rays are left in their bogus initialized state.
If successful, \fBSigmet_Vol_ReadHdr\fP returns \fBSIGMET_READ_OK\fP.
Otherwise, the function stores nothing, it re-initializes the structure at
\fIvol_p\fP with a call to \fBSigmet_Vol_Init\fP, leaves an error message that
can be retrieved with \fBerr_get\fP, and returns an error code described in the
RETURN VALUES section below.
.PP
\fBSigmet_Vol_Read\fP reads and stores a Sigmet raw product
file from stream \fIf\fP into the volume structure at \fIvol_p\fP.
\fIf\fP should be at the start of a raw product file.  \fIvol_p\fP
should have already been initialized with a call to \fBSigmet_Vol_Init\fP.
Upon entry, \fBSigmet_Vol_ReadHdr\fP will free the contents of \fIf\fP with a call
to \fBSigmet_Vol_Free\fP.
If successful, \fBSigmet_Vol_Read\fP returns \fBSIGMET_READ_OK\fP.
If the return value is \fBSIGMET_INPUT_FAIL\fP, input ended unexpectedly, but
some or all of the volume is stored at \fIvol_p\fP.  In both cases, memory
allocated should eventually be freed with a call to \fISigmet_Vol_Free\fP.
Otherwise, the function stores nothing, it re-initializes the structure at
\fIvol_p\fP with a call to \fBSigmet_Vol_Init\fP, leaves an error message that
can be retrieved with \fBerr_get\fP, and returns an error code described in the
RETURN VALUES section below.
.PP
\fBSigmet_Vol_PrintHdr\fP prints volume headers from \fIvol\fP to output
stream \fIout\fP.  Each line of output will have form:

.nf
    \fIvalue\fP \fB|\fP \fIhierarchy\fP \fB|\fP \fIdescription\fP
.fi

where \fIhierarchy\fP refers to a member's position in Sigmet's file
hierarchy, as described in section 3.2 of the IRIS Programmer's Manual.
Hierarchies are printed with form:

.nf
    ...\fB<\fP\fIparent\fP\fB>.<\fP\fIchild\fP\fB>.<\fP\fIgrandchild\fP\fB>.\fP\fImember\fP
.fi

.PP
\fBSigmet_Vol_BadRay\fP returns true if the ray in \fIvol_p\fP at index
\fIs\fP, \fIr\fP is unusable.
.PP
\fBSigmet_Vol_BinOutl\fP computes the geographic coordinates of the bin for sweep
\fIs\fP, ray \fIr\fP, bin \fIb\fP in the Sigmet volume at \fIvol_p\fP.  The
coordinates are placed into array \fIll\fP as (\fIlon1 lat1 lon2 lat2 lon3 lat3
lon4 lat4\fP), denoting the corners of the bin.  Array \fIll\fP should point to
space for eight double values.  \fBSigmet_Vol_BinOutl\fP returns true if it
succeeds.
Return value is a \fBSigmet_Status\fP enumerator, described below.
.PP
\fBSigmet_Vol_ToDorade\fP transfers information from sweep \fIs\fP of the Sigmet
volume at \fIvol_p\fP to the DORADE sweep structure at \fIswp_p\fP. The DORADE
sweep should have been initialized with a call to \fBDorade_Sweep_Init\fP.
\fBSigmet_Vol_ToDorade\fP returns true if it succeeds.
Return value is a \fBSigmet_Status\fP enumerator, described below.
.SH RETURN VALUES
The Sigmet volume access functions return a value that indicates whether
the function succeeded, or how it failed. The return value will be one of:
.nf

    \fBSIGMET_OK\fP          - Success
    \fBSIGMET_NOT_INIT\fP    - A resource or interface is not initialized
    \fBSIGMET_IO_FAIL\fP     - Failed communication with file or process
    \fBSIGMET_HELPER_FAIL\fP - Helper process failed
    \fBSIGMET_BAD_FILE\fP    - An input file is not in expected format
    \fBSIGMET_BAD_VOL\fP     - Corrupt volume in memory
    \fBSIGMET_ALLOC_FAIL\fP  - Failed to allocate memory
    \fBSIGMET_FLUSH_FAIL\fP  - Failed to free desired amount of memory
    \fBSIGMET_BAD_ARG\fP     - An argument to a function could not be parsed
                               or referred to something that does not exist
    \fBSIGMET_RNG_ERR\fP     - A value is too large or out of range
    \fBSIGMET_BAD_TIME\fP    - A time computation failed

.fi
In case of error, the function appends information to the global error string
which can be retrieved with a call to \fBErr_Get\fP().
.SH KEYWORDS
radar sigmet data
.SH AUTHOR
Gordon Carrie (user0@tkgeomap.org)
