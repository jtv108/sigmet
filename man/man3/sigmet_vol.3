.\"
.\" Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\"     * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer in the
.\"     documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Please send feedback to dev0@trekix.net
.\"
.\" $Revision: 1.3 $ $Date: 2011/03/30 20:29:36 $
.Pp
.Dd $Mdocdate$
.Dt SIGMET_VOL 3
.Os UNIX
.Sh NAME
.Nm Sigmet_Vol_Init,
.Nm Sigmet_Vol_Free,
.Nm Sigmet_Vol_ReadHdr,
.Nm Sigmet_Vol_PrintHdr,
.Nm Sigmet_Vol_Read,
.Nm Sigmet_Vol_BadRay,
.Nm Sigmet_Vol_BinOutl,
.Nm Sigmet_Vol_Img_PPI,
.Nm Sigmet_Vol_NewField,
.Nm Sigmet_Vol_DelField,
.Nm Sigmet_Vol_Fld_SetVal,
.Nm Sigmet_Vol_Fld_SetRBeam,
.Nm Sigmet_Vol_Fld_Copy,
.Nm Sigmet_Vol_Fld_AddVal,
.Nm Sigmet_Vol_Fld_AddFld,
.Nm Sigmet_Vol_Fld_SubVal,
.Nm Sigmet_Vol_Fld_SubFld,
.Nm Sigmet_Vol_Fld_MulVal,
.Nm Sigmet_Vol_Fld_MulFld,
.Nm Sigmet_Vol_Fld_DivVal,
.Nm Sigmet_Vol_Fld_DivFld,
.Nm Sigmet_Vol_Fld_Log10,
.Nm Sigmet_Vol_IncrTm,
.Nm Sigmet_Vol_VNyquist,
.Nm Sigmet_Vol_GetDat,
.Nm Sigmet_Vol_GetRayDat,
.Nm Sigmet_Vol_ToDorade,
.Nd read and manipulate data from Sigmet raw product files
.Sh SYNOPSIS
.Fd "#include <sigmet.h>"
.Ft void
.Fn Sigmet_Vol_Init "struct Sigmet_Vol *vol_p"
.Ft void
.Fn Sigmet_Vol_Free "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_ReadHdr "FILE *f" "struct Sigmet_Vol *vol_p"
.Ft void
.Fn Sigmet_Vol_PrintHdr "FILE * f" "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_Read "FILE *f" "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_BadRay "struct Sigmet_Vol *vol_p" "int s" "int r"
.Ft int
.Fn Sigmet_Vol_BinOutl "struct Sigmet_Vol *vol_p" "int s" "int r" "int b" "double *lonlats"
.Ft int
.Fo Sigmet_Vol_Img_PPI
.Fa "struct Sigmet_Vol *vol_p"
.Fa "char *abbrv"
.Fa "int s"
.Fa "char *img_app"
.Fa "char **proj_argv"
.Fa "unsigned w_pxl"
.Fa "double alpha"
.Fa "char *base_nm"
.Fa "double edges[]"
.Fa "char **img_fl_nm"
.Fc
.Ft int
.Fn Sigmet_Vol_NewField "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft int
.Fn Sigmet_Vol_DelField "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft int
.Fn Sigmet_Vol_Fld_SetVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft int
.Fn Sigmet_Vol_Fld_SetRBeam "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft int
.Fn Sigmet_Vol_Fld_Copy "struct Sigmet_Vol *vol_p" "char *dest_field" "char *src_field"
.Ft int
.Fn Sigmet_Vol_Fld_AddVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft int
.Fn Sigmet_Vol_Fld_AddFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *addend_field"
.Ft int
.Fn Sigmet_Vol_Fld_SubVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft int
.Fn Sigmet_Vol_Fld_SubFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *subt_field"
.Ft int
.Fn Sigmet_Vol_Fld_MulVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft int
.Fn Sigmet_Vol_Fld_MulFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *factor_field"
.Ft int
.Fn Sigmet_Vol_Fld_DivVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft int
.Fn Sigmet_Vol_Fld_DivFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *divs_field"
.Ft int
.Fn Sigmet_Vol_Fld_Log10 "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft int
.Fn Sigmet_Vol_IncrTm "struct Sigmet_Vol *vol_p" "double dt"
.Ft double
.Fn Sigmet_Vol_VNyquist "struct Sigmet_Vol *vol_p"
.Ft float
.Fn Sigmet_Vol_GetDat "struct Sigmet_Vol *vol_p" "int y" "int s" "int r" "int b"
.Ft int
.Fn Sigmet_Vol_GetRayDat "struct Sigmet_Vol *vol_p" "int y" "int s" "int r" "float **ray_p" "int *n"
.Ft int
.Fn Sigmet_Vol_ToDorade "struct Sigmet_Vol *vol_p" "int s" "struct Dorade_Sweep *swp_p"
.Sh DESCRIPTION
Data from Sigmet raw product volumes are stored in structures of type
.Li struct\ Sigmet_Vol ,
which is declared in
.Li sigmet.h .
.Pp
.Fn Sigmet_Vol_Init
initializes a Sigmet volume structure at
.Fa vol_p ,
whose previous contents are assumed to be garbage.  Upon return,
.Fa vol_p
can be safely passed to
.Fn Sigmet_Vol_Free .
.Pp
.Fn Sigmet_Vol_Free
frees memory associated with a Sigmet volume structure at
.Fa vol_p
and reinitializes the structure.
.Pp
.Fn Sigmet_Vol_ReadHdr
reads and stores volume headers for a Sigmet raw product file from stream
.Fa f
into the volume structure at
.Fa vol_p .
Volume headers in this context mean members from the product header and
ingest header in the first two records of a raw product file. These headers
give information about the volume time, radar location, and task configuration.
.Fn Sigmet_Vol_ReadHdr
does not store ray headers or data. For all data and meta-data, use
.Fn Simget_Vol_Read .
.Fa f
should be at the start of a raw product file.
.Fa vol_p
should have been initialized at least once with a call to
.Fn Sigmet_Vol_Init .
Upon entry,
.Fn Sigmet_Vol_ReadHdr
will free the contents of
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Free .
If something goes wrong,
.Fn Sigmet_Vol_ReadHdr
stores nothing and re-initializes the structure at
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Init .
.Pp
.Fn Sigmet_Vol_PrintHdr
prints volume headers from
.Fa vol
to output stream
.Fa f
\&.  Each line of output will have form:
.Bd -literal -offset indent
value|hierarchy|description

.Ed
where
.Li hierarchy
refers to a member's position in Sigmet's file hierarchy, as described in section 3.2 of the IRIS Programmer's Manual.  Hierarchies are printed with form:
.Bd -literal -offset indent
\&...<parent>.<child>.<grandchild>.member

.Ed
For example, volume start time from the ingest_configuration member of ingest_header will be identified as
.Li <ingest_header>.<ingest_configuration>.vol_start_time
so the line of output would look something like
.Bd -literal -offset indent
2010/06/12 23:39:19.79 | <ingest_header>.<ingest_configuration>.vol_start_time | Time that volume scan was started, TZ spec in bytes 166 & 224

.Ed .
.Pp
.Fn Sigmet_Vol_Read
reads everything from a Sigmet raw product file from stream
.Fa f .
.Fa f
should be at the start of a raw product file.
If
.Fa vol_p
is
.Li NULL ,
it reads but does not store the volume file, and quietly returns a status
indicating success or failure.
If
.Fa vol_p
is not
.Li NULL ,
it stores the data and headers at
.Fa vol_p ,
which should have already been initialized with a call to
.Fn Sigmet_Vol_Init .
Upon entry,
.Fn Sigmet_Vol_Read
will free the contents of
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Free .
If
.Fn Sigmet_Vol_Read
returns
.Li SIGMET_READ_OK
or
.Li SIGMET_INPUT_FAIL
(see below) then it read all or possibly some of the volume, and populated
.Fa vol_p .
In both of these cases, memory allocated should eventually be freed with a call
to
.Fa Sigmet_Vol_Free .
In all other cases, the function stores nothing, frees any memory it has
allocated, and re-initializes the structure at
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Init .
.Pp
.Fn Sigmet_Vol_BadRay
returns true if the ray in
.Fa vol_p
at index
.Fa s
,
.Fa r
is unusable.
.Pp
.Fn Sigmet_Vol_BinOutl
computes the geographic coordinates of the bin for sweep
.Fa s
, ray
.Fa r
, bin
.Fa b
in the Sigmet volume at
.Fa vol_p
\&. The coordinates are placed into array
.Fa lonlats
as lon1\ lat1\ lon2\ lat2\ lon3\ lat3\ lon4\ lat4, denoting the corners of the bin.  Array
.Fa lonlats
must point to space for eight double values.
.Pp
.Fn Sigmet_Vol_Img_PPI
provides drawing information to an external program for data type
.Fa abbrv ,
sweep
.Fa s ,
in the volume at
.Fa vol_p .
.Fa img_app
gives the name of the external program. If called without arguments, it should
immediately exit with success. This behavior allows trivial testing for the
applications existence. Otherwise, the application should read the drawing
information for the image from its standard input and generate the image file.
It should take one argument,
.Fa base_nm ,
which should suggest a base name for the image file, without a suffix. The external
program can use it to make a name for the file, and should add a suffix if needed,
e.g.
.Li ".png" .
The following information will be sent to the drawing program:
.nf

	    unsigned int	w_dpy		Image width, display units
	    unsigned int	h_dpy		Image height, display units
	    double		left		Map coordinate of left side
	    double		rght		Map coordinate of right side
	    double		top		Map coordinate of top
	    double		btm		Map coordinate of bottom
	    double		alpha		Alpha channel (transparency)
	    unsigned int	n_clrs		Number of colors
	    For n_clrs colors:
		unsigned int	red
		unsigned int	green
		unsigned int	blue
	    For each polygon in the sweep image
		unsigned int	n_color		Color index, in [0,n_clrs)
		unsigned int	npts		Vertex count
		For npts vertices:
		    double	x		Abscissa
		    double	y		Ordinate

.fi
All numerical values will be sent as native binaries. When there is no more
input, the drawing program must be the name of the image file it creates
to its standard output.
.Fa proj_argv
specifies an external program that reads a stream of longitude-latitude
coordinates, as native doubles, from its standard input, and prints the
corresponding map coordinates to its standard output (e.g.
.Nm proj Ns Li ).
The image will be a square of
.Fa w_pxl
by
.Fa w_pxl
pixels.
.Fa alpha
specifies the image alpha value.  Error information will be accumulated with
.Nm Err_Append .
.Fa edges
must be a four element array. It will receive the north, east, south, and
west limits of the image area. The name of the image file, including suffix,
is placed at
.Fa img_fl_nm .
Memory at
.Fa img_fl_nm
is dynamically allocated and must be eventually freed with a call to
.Nm FREE .
.Pp
.Fn Sigmet_Vol_NewField
creates a new field named
.Fa field_name
to the volume at
.Fa vol_p .
All bins in the new field will be initialized to
.Li Sigmet_NoData() .
.Pp
.Fn Sigmet_Vol_DelField
removes field
.Fa field_name
from the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SetVal
assigns value
.Fa v
to all bins of field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SetRBeam
sets bin values for
.Fa field_name
in the volume at
.Fa vol_p .
to distance in meters along the beam to the center of the bin.
.Pp
.Fn Sigmet_Vol_Fld_Copy
replaces the contents of field
.Fa dest_field
with those of
.Fa src_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_AddVal
adds scalar
.Fa v
to field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_AddFld
replaces
.Fa field_name
with
.Fa field_name
\&+
.Fa addend_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SubVal
subtracts scalar
.Fa v
from field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SubFld
replaces
.Fa field_name
with
.Fa field_name
\-
.Fa subt_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_MulVal
multiplies
.Fa field_name
by scalar
.Fa v
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_MulFld
replaces
.Fa field_name
with
.Fa field_name \&*
.Fa factor_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_DivVal
divides
.Fa field_name
by scalar
.Fa v
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_DivFld
replaces
.Fa field_name
with
.Fa field_name \&/
.Fa divs_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_Log10
replaces all bin values for
.Fa field_name
in the volume at
.Fa vol_p
with the common log value. Bins with values for which common log is not defined
are set to
.Li Sigmet_NoData() .
.Pp
.Fn Sigmet_Vol_IncrTm
adds
.Fa dt
days to all times in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_VNyquist
returns the Nyquist (unambiguous) velocity for the volume at
.Fa vol_p
.Pp
.Fn Sigmet_Vol_GetDat
returns the bin value for type index
.Fa y ,
sweep index
.Fa s ,
ray index
.Fa r ,
bin index
.Fa b ,
from the volume at
.Fa vol_p .
Indeces are
.Li 0
based. The return value is the actual measurement (computational) value, not the
storage value from the raw product file.
.Pp
.Fn Sigmet_Vol_GetRayDat
assigns measurement values from the ray of type index
.Fa y ,
sweep index
.Fa s ,
ray index
.Fa r ,
from the volume at
.Fa vol_p
to
.Fa *ray_p .
Receiving array
.Fa *ray_p
should point to space for
.Fa *n
float values.
If
.Fa *n
is insufficient, a possibly new allocation is obtained with a call to
.Li REALLOC
and
.Fa ray_p
and
.Fa n
are updated.
.Pp
.Fn Sigmet_Vol_ToDorade
transfers information from sweep
.Fa s
of the Sigmet volume at
.Fa vol_p
to the DORADE sweep structure at
.Fa swp_p .
The DORADE sweep should have been initialized with a call to
.Fn Dorade_Sweep_Init .
.Sh RETURN VALUES
The Sigmet volume access functions return an integer indicates whether the
function succeeded, or how it failed. The return values are declared in
sigmet.h.
They are:
.Bl -inset -offset indent
.It Em SIGMET_OK
Success
.It Em SIGMET_NOT_INIT
A resource or interface is not initialized
.It Em SIGMET_IO_FAIL
Failed communication with file or process
.It Em SIGMET_HELPER_FAIL
Helper process failed
.It Em SIGMET_BAD_FILE
An input file is not in expected format
.It Em SIGMET_BAD_VOL
Corrupt volume in memory
.It Em SIGMET_ALLOC_FAIL
Failed to allocate memory
.It Em SIGMET_FLUSH_FAIL
Failed to free desired amount of memory
.It Em SIGMET_BAD_ARG
An argument to a function could not be parsed or referred to something that does not exist
.It Em SIGMET_RNG_ERR
A value is too large or out of range
.It Em SIGMET_BAD_TIME
A time computation failed

.El
In case of error, the function appends information to the global error string which can be retrieved with a call to
.Fn Err_Get .
.Sh KEYWORDS
radar sigmet data
.Sh SEE ALSO
.Xr alloc 3 ,
.Xr Err_Get 3 ,
.Xr sigmet_raw 1
.Rs
.%B IRIS Programmer's Manual
.Re
.Sh AUTHOR
Gordon Carrie (dev0@trekix.net)
