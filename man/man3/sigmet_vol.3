.\"
.\" Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\"     * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer in the
.\"     documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" Please send feedback to dev0@trekix.net
.\"
.\" $Revision: 1.16 $ $Date: 2012/12/11 19:50:34 $
.Dd $Mdocdate$
.Dt SIGMET_VOL 3
.Os UNIX
.Sh NAME
.Nm Sigmet_Vol_Init ,
.Nm Sigmet_Vol_Free ,
.Nm Sigmet_ShMemAttach ,
.Nm Sigmet_ShMemDetach ,
.Nm Sigmet_Vol_ReadHdr ,
.Nm Sigmet_Vol_DataTypeHdrs ,
.Nm Sigmet_Vol_PrintHdr ,
.Nm Sigmet_Vol_PrintMinHdr ,
.Nm Sigmet_Vol_Read ,
.Nm Sigmet_Vol_LzCpy ,
.Nm Sigmet_Vol_NearSweep ,
.Nm Sigmet_Vol_RadarLon ,
.Nm Sigmet_Vol_RadarLat ,
.Nm Sigmet_Vol_ScanMode ,
.Nm Sigmet_Vol_NumTypes ,
.Nm Sigmet_Vol_NumSweeps ,
.Nm Sigmet_Vol_NumRays ,
.Nm Sigmet_Vol_NumBins ,
.Nm Sigmet_Vol_MemSz ,
.Nm Sigmet_Vol_SweepHdr ,
.Nm Sigmet_Vol_RayHdr ,
.Nm Sigmet_Vol_IsPPI ,
.Nm Sigmet_Vol_IsRHI ,
.Nm Sigmet_Vol_RayGeom ,
.Nm Sigmet_Vol_BadRay ,
.Nm Sigmet_Vol_BinStart ,
.Nm Sigmet_Vol_BinOutl ,
.Nm Sigmet_Vol_PPI_BinOutl ,
.Nm Sigmet_Vol_PPI_Bnds ,
.Nm Sigmet_Vol_RHI_BinOutl ,
.Nm Sigmet_Vol_RHI_Bnds ,
.Nm Sigmet_Vol_NewField ,
.Nm Sigmet_Vol_DelField ,
.Nm Sigmet_Vol_Fld_SetVal ,
.Nm Sigmet_Vol_Fld_SetRBeam ,
.Nm Sigmet_Vol_Fld_Copy ,
.Nm Sigmet_Vol_Fld_AddVal ,
.Nm Sigmet_Vol_Fld_AddFld ,
.Nm Sigmet_Vol_Fld_SubVal ,
.Nm Sigmet_Vol_Fld_SubFld ,
.Nm Sigmet_Vol_Fld_MulVal ,
.Nm Sigmet_Vol_Fld_MulFld ,
.Nm Sigmet_Vol_Fld_DivVal ,
.Nm Sigmet_Vol_Fld_DivFld ,
.Nm Sigmet_Vol_Fld_Log10 ,
.Nm Sigmet_Vol_IncrTm ,
.Nm Sigmet_Vol_ShiftAz ,
.Nm Sigmet_Vol_VNyquist ,
.Nm Sigmet_Vol_GetFld ,
.Nm Sigmet_Vol_GetDatum ,
.Nm Sigmet_Vol_GetRayDat ,
.Nm Sigmet_Vol_ToDorade
.Nd read and manipulate data from Sigmet raw product files
.Sh SYNOPSIS
.Fd "#include <sigmet.h>"
.Ft void
.Fn Sigmet_Vol_Init "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Free "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_ShMemAttach "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_ShMemDetach "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_ReadHdr "FILE *f" "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_DataTypeHdrs "struct Sigmet_Vol *vol_p" "int y" "char **data_type_s_p" "char **descr_p" "char **unit_p"
.Ft void
.Fn Sigmet_Vol_PrintHdr "FILE * f" "struct Sigmet_Vol *vol_p"
.Ft void
.Fn Sigmet_Vol_PrintMinHdr "FILE * f" "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Read "FILE *f" "struct Sigmet_Vol *vol_p"
.Ft void
.Fn Sigmet_Vol_LzCpy "struct Sigmet_Vol *dest" "struct Sigmet_Vol *src"
.Ft int
.Fn Sigmet_Vol_NearSweep "struct Sigmet_Vol *vol_p" "double ang"
.Ft double
.Fn Sigmet_Vol_RadarLon "struct Sigmet_Vol *vol_p" "double *lon_p"
.Ft double
.Fn Sigmet_Vol_RadarLat "struct Sigmet_Vol *vol_p" "double *lat_p"
.Ft enum Sigmet_ScanMode
.Fn Sigmet_Vol_ScanMode "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_NumTypes "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_NumSweeps "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_NumRays "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_NumBins "struct Sigmet_Vol *vol_p" "int s" "int r"
.Ft size_t
.Fn Sigmet_Vol_MemSz "struct Sigmet_Vol *vol_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_SweepHdr "struct Sigmet_Vol *vol_p" "int s" "int *ok_p" "double *tm_p" "double *ang_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_RayHdr "struct Sigmet_Vol *vol_p" "int s" "int r" "int *ok_p" "double *tm_p" "int *num_bins_p" "double *tilt0_p" "double *tilt1_p" "double *az0_p" "double *az1_p"
.Ft int
.Fn Sigmet_Vol_IsPPI "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_IsRHI "struct Sigmet_Vol *vol_p"
.Ft void
.Fn Sigmet_Vol_RayGeom "struct Sigmet_Vol *vol_p" "int s" "double *v0" "double *v1" "double *fx_p" "int *num_rays_p"
.Ft int
.Fn Sigmet_Vol_BadRay "struct Sigmet_Vol *vol_p" "int s" "int r"
.Ft double
.Fn Sigmet_Vol_BinStart "struct Sigmet_Vol *vol_p" "int b"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_BinOutl "struct Sigmet_Vol *vol_p" "int s" "int r" "int b" "double *lonlats"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_PPI_BinOutl" "struct Sigmet_Vol *vol_p" "int s" "int r" "int b" "int (*lonlat_to_xy)(double, double, double *, double *)" "double *cnr"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_PPI_Bnds "struct Sigmet_Vol *vol_p " "int s" "struct GeogProj *proj" "double *x_min_p" "double *x_max_p" "double *y_min_p" "double *y_max_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_RHI_BinOutl" "struct Sigmet_Vol *vol_p" "int s" "int r" "int b" "double *cnr"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_RHI_Bnds "struct Sigmet_Vol *vol_p" "int s" "double *x_max_p" "double *y_max_p"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_NewField "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_DelField "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_SetVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_SetRBeam "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_Copy "struct Sigmet_Vol *vol_p" "char *dest_field" "char *src_field"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_AddVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_AddFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *addend_field"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_SubVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_SubFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *subt_field"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_MulVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_MulFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *factor_field"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_DivVal "struct Sigmet_Vol *vol_p" "char *field_name" "float v"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_DivFld "struct Sigmet_Vol *vol_p" "char *field_name" "char *divs_field"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_Fld_Log10 "struct Sigmet_Vol *vol_p" "char *field_name"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_IncrTm "struct Sigmet_Vol *vol_p" "double dt"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_ShiftAz "struct Sigmet_Vol *vol_p" "double daz"
.Ft double
.Fn Sigmet_Vol_VNyquist "struct Sigmet_Vol *vol_p"
.Ft int
.Fn Sigmet_Vol_GetFld "struct Sigmet_Vol *vol_p" "char *data_type_s" "struct Sigmet_Dat **dat_pp"
.Ft float
.Fn Sigmet_Vol_GetDatum "struct Sigmet_Vol *vol_p" "int y" "int s" "int r" "int b"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_GetRayDat "struct Sigmet_Vol *vol_p" "int y" "int s" "int r" "float **ray_p" "int *n"
.Ft enum SigmetStatus
.Fn Sigmet_Vol_ToDorade "struct Sigmet_Vol *vol_p" "int s" "struct Dorade_Sweep *swp_p"
.Sh DESCRIPTION
Data from Sigmet raw product volumes are stored in structures of type
.Li struct\ Sigmet_Vol ,
which is declared in
.Li sigmet.h .
.Pp
.Fn Sigmet_Vol_Init
initializes a Sigmet volume structure at
.Fa vol_p ,
whose previous contents are assumed to be garbage.  Upon return,
.Fa vol_p
can be safely passed to
.Fn Sigmet_Vol_Free .
.Pp
.Fn Sigmet_Vol_Free
frees memory associated with a Sigmet volume structure at
.Fa vol_p
and reinitializes the structure.
.Pp
.Fn Sigmet_ShMemAttach
maps pointers in
.Fa vol_p
to shared memory. 
.Pp
.Fn Sigmet_ShMemDetach
detaches
.Fa vol_p
from shared memory.
.Pp
.Fn Sigmet_Vol_ReadHdr
reads and stores volume headers for a Sigmet raw product file from stream
.Fa f
into the volume structure at
.Fa vol_p .
Volume headers in this context mean members from the product header and
ingest header in the first two records of a raw product file. These headers
give information about the volume time, radar location, and task configuration.
.Fn Sigmet_Vol_ReadHdr
does not store ray headers or data. For all data and meta-data, use
.Fn Simget_Vol_Read .
.Fa f
should be at the start of a raw product file.
.Fa vol_p
should have been initialized at least once with a call to
.Fn Sigmet_Vol_Init .
Upon entry,
.Fn Sigmet_Vol_ReadHdr
will free the contents of
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Free .
If something goes wrong,
.Fn Sigmet_Vol_ReadHdr
stores nothing and re-initializes the structure at
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Init .
.Pp
.Fn Sigmet_Vol_DataTypeHdrs
retrieves information about data type with index
.Fa y
in the volume at
.Fa vol_p .
The data type name is placed at
.Fa data_type_s_p .
The data type description is placed at
.Fa descr_p .
The data type unit is placed at
.Fa unit_p .
.Dv NULL
arguments are skipped. Returned pointers should not be modified by the caller.
.Pp
.Fn Sigmet_Vol_PrintHdr
prints volume headers from
.Fa vol
to output stream
.Fa f
\&.  Each line of output will have form:
.Bd -literal -offset indent
value | hierarchy | description

.Ed
where
.Li hierarchy
refers to a member's position in Sigmet's file hierarchy, as described in section 3.2 of the IRIS Programmer's Manual.  Hierarchies are printed with form:
.Bd -literal -offset indent
\&...<parent>.<child>.<grandchild>.member

.Ed
For example, volume start time from the ingest_configuration member of ingest_header will be identified as
.Li <ingest_header>.<ingest_configuration>.vol_start_time
so the line of output would look something like
.Bd -literal -offset indent
2010/06/12 23:39:19.79 | <ingest_header>.<ingest_configuration>.vol_start_time | Time that volume scan was started, TZ spec in bytes 166 & 224

.Ed .
.Pp
.Fn Sigmet_Vol_PrintMinHdr
prints frequently used volume headers from
.Fa vol
to output stream
.Fa f
\&.  Each line of output will have form:
.Bd -literal -offset indent
name=value

.Ed
.Pp
.Fn Sigmet_Vol_Read
reads everything from a Sigmet raw product file from stream
.Fa f .
.Fa f
should be at the start of a raw product file.
If
.Fa vol_p
is
.Dv NULL ,
it reads but does not store the volume file, and quietly returns a status
indicating success or failure.
If
.Fa vol_p
is not
.Dv NULL ,
it stores the data and headers at
.Fa vol_p ,
which should have already been initialized with a call to
.Fn Sigmet_Vol_Init .
Upon entry,
.Fn Sigmet_Vol_Read
will free the contents of
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Free .
If
.Fn Sigmet_Vol_Read
returns
.Li SIGMET_READ_OK
or
.Li SIGMET_INPUT_FAIL
(see below) then it read all or possibly some of the volume, and populated
.Fa vol_p .
In both of these cases, memory allocated should eventually be freed with a call
to
.Fa Sigmet_Vol_Free .
In all other cases, the function stores nothing, frees any memory it has
allocated, and re-initializes the structure at
.Fa vol_p
with a call to
.Fn Sigmet_Vol_Init .
.Pp
.Fn Sigmet_Vol_LzCpy
does a shallow copy from
.Fa src
to
.Fa dest .
It copies pointers, but not data stored at the pointed to memory.
.Pp
.Fn Sigmet_Vol_NearSweep
returns the index of the sweep in the volume at
.Fa vol_p
nearest angle
.Fa ang ,
or -1 if something goes wrong.
.Fa ang
must be in radians.
.Pp
.Fn Sigmet_Vol_RadarLon
and
.Fn Sigmet_Vol_RadarLat
get or set a radar longitude or latiutde. If
.Fa lon_p
is not
.Dv NULL ,
.Fn Sigmet_Vol_RadarLon
sets the longitude of the volume at
.Fa vol_p
to the value there. It returns the radar longitude, whether modified or not. If
.Fa lat_p
is not
.Dv NULL ,
.Fn Sigmet_Vol_RadarLat
sets the latitude of the volume at
.Fa vol_p
to the value there. It returns the radar latitude, whether modified or not.
Longitudes and latitudes are measured in radians.
.Pp
.Fn Sigmet_Vol_ScanMode 
returns the scan mode for the volume at
.Fa vol_p ,
one of
.Dv PPI_S ,
.Dv RHI ,
.Dv MAN_SCAN ,
.Dv PPI_C ,
or
.Dv FILE_SCAN .
.Pp
.Fn Sigmet_Vol_NumTypes
returns the number of data types in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_NumSweeps
returns the number of sweeps in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_NumRays
returns the number of rays in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_NumBins
returns the number of bins in sweep
.Fa s ,
ray
.Fa r
of the volume at
.Fa vol_p .
If
.Fa r
is
.Li -1 ,
return value is the largest number of bins among all rays in sweep
.Fa s .
.Pp
.Fn Sigmet_Vol_MemSz
returns the number of bytes of memory the volume at
.Fa vol_p
is using, or
.Li -1
(an impossibly huge value) if
.Fa vol_p
is invalid.
.Pp
.Fn Sigmet_Vol_SweepHdr
fetches sweep header information for sweep
.Fa s
of
.Fa vol_p .
.Fa ok_p
receives
.Dv true
if the sweep is usable, otherwise it receives
.Dv false .
.Fa tm_p
receives the sweep start time, as a Julian day.
.Fa ang_p
receives the sweep angle, in radians.
If the sweep is bad, values are set to
.Dv NAN .
.Dv NULL
pointers are skipped.
.Pp
.Fn Sigmet_Vol_RayHdr
fetches ray header information for sweep
.Fa s ,
ray
.Fa r
of
.Fa vol_p .
.Fa ok_p
receives
.Dv true
if the sweep and ray are usable, otherwise it receives
.Dv false .
.Fa tm_p
receives the ray time, as a Julian day.
.Fa num_bins_p
receives the number of bins in the ray, or
.Dv -1
if the sweep or the ray is bad.
.Fa tilt0_p
receives the ray start tilt, in radians.
.Fa tilt1_p
receives the ray end tilt, in radians.
.Fa az0_p
receives the ray start azimuth, in radians.
.Fa az1_p
receives the ray end azimuth, in radians.
If the sweep or ray is bad, float values are set to
.Dv NAN .
.Dv NULL
pointers are skipped.
.Pp
.Fn Sigmet_Vol_IsPPI
returns true if
.Fa vol_p
points to a Plan Position Indicator (PPI) volume.
.Pp
.Fn Sigmet_Vol_IsRHI
returns true if
.Fa vol_p
points to a Range Height Indicator (RHI) volume.
.Pp
.Fn Sigmet_Vol_RayGeom
fetches ray geometry for sweep
.Fa s
of the volume at
.Fa vol_p .
.Fa v0
and
.Fa v1
must point to storage for
.Li num_rays
.Vt double
values.
The start of the varying angle - azimuth for PPI, tilt for RHI - for each good ray
is copied to
.Fa v0 .
The end of the varying angle for each good ray is copied to
.Fa v1 .
The mean fixed angle - PPI tilt or RHI azimuth - is copied to
.Fa fx_p .
The actual number of rays in the sweep is copied to
.Fa num_rays_p .
Angles are given in radians. Angles for a bad rays are set to
.Dv NAN .
If something goes wrong,
.Fa fx_p
is set to
.Dv NAN
and
.Fa num_rays_p
is set to
.Li 0 .
.Pp
.Fn Sigmet_Vol_BadRay
returns true if the ray in
.Fa vol_p
at index
.Fa s
,
.Fa r
is unusable.
.Pp
.Fn Sigmet_Vol_BinStart
returns the distance in meters along the beam to bin
.Fa b
of the volume at
.Fa vol_p .
.Fa b
can be any integer, including out of bounds values.
.Pp
.Fn Sigmet_Vol_BinOutl
computes the geographic coordinates of the bin for sweep
.Fa s
, ray
.Fa r
, bin
.Fa b
in the Sigmet volume at
.Fa vol_p
\&. The coordinates are placed into array
.Fa lonlats
as lon1\ lat1\ lon2\ lat2\ lon3\ lat3\ lon4\ lat4, denoting the corners of the bin.  Array
.Fa lonlats
must point to space for eight
.Vt double
values.
.Pp
.Fn Sigmet_Vol_PPI_BinOutl
computes map coordinates of the bin for sweep
.Fa s
, ray
.Fa r
, bin
.Fa b
in the Sigmet volume at
.Fa vol_p .
.Fa lonlat_to_xy
computes map coordinates for longitude and latitude given as its first two
arguments. The abscissa and ordinate are placed at the third and fourth
arguments, respectively. The map coordinates of the bin corners are placed at
.Fa cnr ,
which must point to storage for eight
.Vt double
values.
.Pp
.Fn Sigmet_Vol_PPI_Bnds
computes sweep limits in map coordinates for sweep
.Fa s
of the volume at
.Fa vol_p .
Projection
.Fa proj
defines the transformation from geographic to map coordinates. The resulting
limits are placed at
.Fa x_min_p ,
.Fa x_max_p ,
.Fa y_min_p ,
and
.Fa y_max_p .
.Pp
.Fn Sigmet_Vol_RHI_BinOutl
computes distance-height coordinates in meters of the bin for sweep
.Fa s
, ray
.Fa r
, bin
.Fa b
in the Sigmet volume at
.Fa vol_p .
The corner coordinates of the bin are placed at
.Fa cnr ,
which must point to storage for eight
.Vt double
values.
.Pp
.Fn Sigmet_Vol_RHI_Bnds
computes sweep limits in meters for sweep
.Fa s
of the volume at
.Fa vol_p
The resulting limits are placed at
.Fa x_min_p ,
.Fa x_max_p ,
.Fa y_min_p ,
and
.Fa y_max_p .
.Pp
.Fn Sigmet_Vol_NewField
creates a new field named
.Fa field_name
to the volume at
.Fa vol_p .
All bins in the new field will be initialized to
.Dv NAN .
.Pp
.Fn Sigmet_Vol_DelField
removes field
.Fa field_name
from the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SetVal
assigns value
.Fa v
to all bins of field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SetRBeam
sets bin values for
.Fa field_name
in the volume at
.Fa vol_p .
to distance in meters along the beam to the center of the bin.
.Pp
.Fn Sigmet_Vol_Fld_Copy
replaces the contents of field
.Fa dest_field
with those of
.Fa src_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_AddVal
adds scalar
.Fa v
to field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_AddFld
replaces
.Fa field_name
with
.Fa field_name
\&+
.Fa addend_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SubVal
subtracts scalar
.Fa v
from field
.Fa field_name
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_SubFld
replaces
.Fa field_name
with
.Fa field_name
\-
.Fa subt_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_MulVal
multiplies
.Fa field_name
by scalar
.Fa v
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_MulFld
replaces
.Fa field_name
with
.Fa field_name \&*
.Fa factor_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_DivVal
divides
.Fa field_name
by scalar
.Fa v
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_DivFld
replaces
.Fa field_name
with
.Fa field_name \&/
.Fa divs_field
in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_Fld_Log10
replaces all bin values for
.Fa field_name
in the volume at
.Fa vol_p
with the common log value. Bins with values for which common log is not defined
are set to
.Dv NAN .
.Pp
.Fn Sigmet_Vol_IncrTm
adds
.Fa dt
days to all times in the volume at
.Fa vol_p .
.Pp
.Fn Sigmet_Vol_ShiftAz
shifts all azimuths in the volume at
.Fa vol_p
by
.Fa daz
radians.
.Pp
.Fn Sigmet_Vol_VNyquist
returns the Nyquist (unambiguous) velocity for the volume at
.Fa vol_p
.Pp
.Fn Sigmet_Vol_GetFld
returns an index for the field identified as
.Fa data_type_s
of volume
.Fa vol_p ,
or
.Dv -1
if the volume has no field by that name. If not
.Dv NULL ,
.Fa dat_pp
receives the address of a
.Vt Sigmet_Dat
structure with more information about the data type.
.Pp
.Fn Sigmet_Vol_GetDatum
returns the bin value for type index
.Fa y ,
sweep index
.Fa s ,
ray index
.Fa r ,
bin index
.Fa b ,
from the volume at
.Fa vol_p .
Indeces are
.Li 0
based. The return value is the actual measurement (computational) value, not the
storage value from the raw product file.
.Pp
.Fn Sigmet_Vol_GetRayDat
assigns measurement values from the ray of type index
.Fa y ,
sweep index
.Fa s ,
ray index
.Fa r ,
from the volume at
.Fa vol_p
to
.Fa *ray_p .
Receiving array
.Fa *ray_p
should point to space for
.Fa *n
float values.
If
.Fa *n
is insufficient, a possibly new allocation is obtained with a call to
.Li REALLOC
and
.Fa ray_p
and
.Fa n
are updated.
.Pp
.Fn Sigmet_Vol_ToDorade
transfers information from sweep
.Fa s
of the Sigmet volume at
.Fa vol_p
to the DORADE sweep structure at
.Fa swp_p .
The DORADE sweep should have been initialized with a call to
.Fn Dorade_Sweep_Init .
.Sh RETURN VALUES
Unless otherwise indicated, Sigmet volume access functions return an integer
indicates whether the function succeeded, or how it failed. The return values
are declared in
.Li sigmet.h.
They are:
.Bl -inset -offset indent
.It Dv SIGMET_OK
Success
.It Dv SIGMET_NOT_INIT
A resource or interface is not initialized
.It Dv SIGMET_IO_FAIL
Failed communication with file or process
.It Dv SIGMET_HELPER_FAIL
Helper process failed
.It Dv SIGMET_BAD_FILE
An input file is not in expected format
.It Dv SIGMET_BAD_VOL
Corrupt volume in memory
.It Dv SIGMET_ALLOC_FAIL
Failed to allocate memory
.It Dv SIGMET_FLUSH_FAIL
Failed to free desired amount of memory
.It Dv SIGMET_BAD_ARG
An argument to a function could not be parsed or referred to something that does not exist
.It Dv SIGMET_RNG_ERR
A value is too large or out of range
.It Dv SIGMET_BAD_TIME
A time computation failed
.El
Error information is printed to
.Dv stderr .
.Sh KEYWORDS
radar sigmet data
.Sh SEE ALSO
.Xr alloc 3 ,
.Xr Err_Get 3 ,
.Xr tm_calc_lib 3 ,
.Xr sigmet_raw 1
.Rs
.%B IRIS Programmer's Manual
.Re
.Sh AUTHOR
Gordon Carrie (dev0@trekix.net)
