.\"
.\" Copyright (c) 2010 Gordon D. Carrie
.\" All rights reserved.
.\"
.\" Please send feedback to dev0@trekix.net
.\"
.\" $Revision: $ $Date: $
.TH data_types 1 DataTypes "Data management functions"
.SH NAME
DataType_Add, DataType_Rm, DataType_SetBounds, DataType_GetBounds, DataType_SetColors, DataType_GetColors \- store information about data types
.SH VERSION
1
.SH SYNOPSIS
.nf
\fB#include "data_types.h"\fP
\fBint\fP \fBDataType_Add\fP(\fBchar\fP *\fIabbrv\fP, \fBchar\fP *\fIdescr\fP);
\fBvoid\fP \fBDataType_Rm\fP(\fBchar\fP *\fIabbrv\fP);
\fBint\fP \fBDataType_SetBounds\fP(\fBchar\fP *\fIabbrv\fP, \fBint\fP \fIn_bounds\fP, \fBdouble\fP *\fIbounds\fP);
\fBint\fP \fBDataType_SetBounds_CB\fP(\fBint\fP \fIargc\fP, \fBchar\fP **\fIargv\fP);
\fBdouble\fP * \fBDataType_GetBounds\fP(\fBchar\fP *\fIabbrv\fP, \fBint\fP *\fIn_bounds\fP);
\fBint\fP \fBDataType_SetColors\fP(\fBchar\fP *\fIabbrv\fP, \fBstruct Data_Color\fP *\fIcolors\fP);
\fBint\fP \fBDataType_SetColors_CB\fP(\fBint\fP \fIargc\fP, \fBchar\fP **\fIargv\fP);
\fBstruct Data_Color\fP * \fBDataType_GetColors\fP(\fBchar\fP *\fIabbrv\fP, \fBint\fP *\fIn_colors\fP);
.fi
.SH DESCRIPTION
These functions store and retrieve information about data types, e.g.
reflectivity, velocity, etc.

\fBDataType_Add\fP creates a new data type identified as \fIabbrv\fP, with long
description \fIdescr\fP.  \fIabbrv\fP and \fIdescr\fP must be strings.  The
function returns true if it succeeds.  Otherwise it returns false and leaves an
error message that can be retrieved with a call to \fBErr_Get()\fP;

\fBDataType_GetDescr\fP returns the descriptor associated with the data type
identified as \fIabbrv\fP. The returned value should not be modified by the user.
It returns \fBNULL\fP if \fIabbrv\fP does not identify a data type.

\fBDataType_Rm\fP removes the data type identified as \fIabbrv\fP.

\fBDataType_SetBounds\fP associates a set of boundaries with the data type
identified as \fIabbrv\fP. These boundaries normally define a set of intervals
into which data values are binned for display or classification.  \fIbounds\fP
must point to \fIn_bounds\fP floating point values.
This function returns true if it succeeds.  Otherwise it returns false and
leaves an error message that can be retrieved with a call to \fBErr_Get()\fP;

\fBDataType_SetBounds_CB\fP sets bounds from arguments in a command line of
\fIargc\fP strings in array \fIargv\fP.
\fIargv\fP[0] gives the command name, used in error messages.
\fIargv\fP[1] identifies the data type.
\fIargv\fP[2]  indicates the number of boundaries.
The command will read this number of values from the file named in \fIargv\fP[3],
which should contain a monotonic sequence of float values, separated by whitespace.
This function returns true if it succeeds.  Otherwise it returns false and
leaves an error message that can be retrieved with a call to \fBErr_Get()\fP;

\fBDataType_GetBounds\fP returns the bounds associated with the data type
identified as \fIabbrv\fP.  The returned value should not be modified by the user.
It puts the number of bounds at \fIn_bounds\fP.
It returns \fBNULL\fP if \fIabbrv\fP does not identify a data type.

\fBDataType_SetColors\fP associates a set of colors with the data type
identified as \fIabbrv\fP. 
\fIcolors\fP must point to \fIn_bounds\fP\ \fB-\ 1\fP color values.
The form of \fBstruct Data_Color\fP is declared in \fBdata_types.h\fP as
.nf

    struct Data_Color {
        double red, green, blue;
    };

.fi
where red, green, and blue refer to color values in range \fB[0.0,1.0]\fP.
This function returns true if it succeeds.  Otherwise it returns false and
leaves an error message that can be retrieved with a call to \fBErr_Get()\fP;

\fBDataType_SetColors_CB\fP sets colors from arguments in a command line of
\fIargc\fP strings in array \fIargv\fP.
\fIargv\fP[0] gives the command name, used in error messages.
\fIargv\fP[1] identifies the data type.
Bounds for the data type should already be set.
The command will read one less than the number of bounds values from the file
named in \fIargv\fP[2], which should contain three whitespace separated floating
point values in range \fB[0,1]\fP, giving red, green, and blue values for each
interval in the bounds set.
This function returns true if it succeeds.  Otherwise it returns false and
leaves an error message that can be retrieved with a call to \fBErr_Get()\fP;

\fBDataType_GetColors\fP returns the colors associated with the data type
identified as \fIabbrv\fP.  The returned value should not be modified by the user.
It puts the number of colors at \fIn_colors\fP.
It returns \fBNULL\fP if \fIabbrv\fP does not identify a data type.
.SH SEE ALSO
Err_Append
.SH KEYWORDS
radar data
.SH AUTHOR
Gordon Carrie (dev0@trekix.net)
