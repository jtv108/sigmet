.\" 
.\" Copyright (c) 2009 Gordon D. Carrie
.\" All rights reserved
.\" 
.\" Please address questions and feedback to dev0@trekix.net
.\" 
.\" $Revision: 1.26 $ $Date: 2010/08/31 21:32:19 $
.\"
.TH sigmet_raw 3 "Sigmet raw product"
.SH NAME
sigmet_rawd, sigmet_raw \- access Sigmet raw product volumes
.SH SYNOPSIS
.nf
\fBexport\fP \fBSIGMET_RAWD_DIR=\fP\fIdirectory\fP 
\fBsigmet_raw\fP \fBstart\fP \fIcommand ...\fP
\fBsigmet_raw\fP \fBpid\fP
\fBsigmet_raw\fP \fBtypes\fP
\fBsigmet_raw\fP \fBgood\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBhread\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBread\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBlist\fP
\fBsigmet_raw\fP \fBrelease\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBflush\fP
\fBsigmet_raw\fP \fBvolume_headers\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBvol_hdr\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBnear_sweep\fP
\fBsigmet_raw\fP \fBray_headers\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBdata\fP [\fItype\fP] [\fIs\fP] [\fIr\fP] [\fIb\fP] \fIvolume_file\fP
\fBsigmet_raw\fP \fBbin_outline\fP \fIs\fP \fIr\fP \fIb\fP \fIunit\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBcolors\fP \fIdata_type\fP \fIcolors_file\fP
\fBsigmet_raw\fP \fBbintvls\fP \fItype\fP \fIs\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBradar_lon\fP \fIlon\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBradar_lat\fP \fIlat\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBshift_az\fP \fIangle\fP \fIvolume_file\fP
\fBsigmet_raw\fP \fBproj\fP \fIargs ...\fP
\fBsigmet_raw\fP \fBimg_app\fP \fIpath\fP
\fBsigmet_raw\fP \fBimg_sz\fP \fIn\fP
\fBsigmet_raw\fP \fBalpha\fP \fIa\fP
\fBsigmet_raw\fP \fBimg_name\fP [\fItype\fP] [\fIs\fP] \fIvolume_file\fP
\fBsigmet_raw\fP \fBimg\fP
.fi
.SH DESCRIPTION
\fBsigmet_raw\fP reads, stores, and manipulates data from Sigmet raw product
volumes. Its behavior is determined by the subcommand on the command line.
The following subcommands are recognized:
.TP
\fBsigmet_raw\fP \fBstart\fP \fIcommand ...\fP
This command must be run before any of the other commands listed below will
work. It starts a background daemon, named \fBsigmet_rawd\fP, that stores and
manages Sigmet volumes. Then it creates an environment needed to access the
daemon, and then it executes unix command \fIcommand\fP.  \fIcommand\fP can be an
interactive shell, e.g.  \fBsigmet_raw start bash -l\fP, or a shell script.
If \fIcommand\fP is an interactive shell, the prompt will return to the
usual prompt for the shell, and the user can type in commands.  Invocations of
\fBsigmet_raw\fP on the command line or in the script will use the
daemon to store and fetch data from Sigmet volumes. The daemon automatically exits
when \fIcommand\fP exits, either because the user logs out, or the script finishes.

The daemon keeps files in a directory specified by environment variable
\fBSIGMET_RAWD_DIR\fP, or $\fBHOME/.sigmet_raw\fP if \fBSIGMET_RAWD_DIR\fP is not
set.

Invocations of \fBsigmet_raw\fP in other shells can use the same daemon if their
\fBSIGMET_RAWD_DIR\fP is set to the path used by a given instance of
\fBsigmet_raw start\fP.

Log messages go to \fBsigmet.log\fP, and error messages go to \fBsigmet.err\fP in
the daemon directory.
.TP
\fBsigmet_raw\fP \fBpid\fP
Prints the daemons process id.
.TP
\fBsigmet_raw\fP \fBtypes\fP
Prints a list of Sigmet data types.  Output lines have form:
.sp 1
.ti +4
\fIDB_XXX\fP \fB|\fP \fIDescription\fP
.sp 1
See the IRIS Programmer's Manual for information about Sigmet data types.
.TP
\fBsigmet_raw\fP \fBgood\fP \fIvolume_file\fP
This command attempts to navigate \fIvolume_file\fP, but does not store any data.
No output is printed.  This command returns 0 if it succeeds and the volume is
good, 1 if \fIvolume_file\fP does not exist, 2 if it cannot read
\fIvolume_file\fP, and 3 if \fIvolume_file\fP is not a good volume.
.TP
\fBsigmet_raw\fP \fBhread\fP \fIvolume_file\fP
Tells the daemon to read headers from \fIvolume_file\fP, which must be the path
of a Sigmet raw product file.  Headers, but no data, will be stored in memory for
subsequent calls to \fBsigmet_raw\fP.  Calls that use the volume will identify it
by the file that provided it. Paths given later do not have to perfectly match
\fIvolume_file\fP, they just have to identify the same file.
(Links and relative paths are handled correctly.)
Each call to \fBhread\fP increments a user count associated with the volume.
The daemon will not delete a volume with a positive user count.  The user
count should eventually be decreased with a call to \fBrelease\fP.
If a volume is already in storage, the daemon will not normally read it again.
It will only increment the user count. 
If the daemon runs out of memory while loading a volume, it will flush unused
volumes and try again.
This command returns 0 if it succeeds, 1 if \fIvolume_file\fP does not exist,
2 if the daemon cannot read \fIvolume_file\fP, 3 if the daemon runs out of
memory, and 4 for any other error.
.TP
\fBsigmet_raw\fP \fBread\fP \fIvolume_file\fP
Tells the daemon to read \fIvolume_file\fP, which must be the path of a Sigmet raw
product file.  Contents of the volume will be stored in memory for subsequent
calls to \fBsigmet_raw\fP.  Calls that use the volume will identify it by the file
that provided it. Paths given later do not have to perfectly match
\fIvolume_file\fP, they just have to identify the same file.
(Links and relative paths are handled correctly.)
Each call to \fBread\fP increments a user count associated with the volume.
The daemon will not delete a volume with a positive user count.  The user
count should eventually be decreased with a call to \fBrelease\fP.
If a volume is already in storage, the daemon will not normally read it again.
It will only increment the user count. The daemon will attempt to re-read the
volume if it is loaded but truncated - missing sweeps. This could happen if
the volume is being written by a slow network connection, or if the radar
operator issued a "stop now" command before the Sigmet task completed.  The
\fBtruncated\fP header member obtained with
\fBsigmet_raw\fP\ \fBvolume_headers\fP indicates whether a loaded volume is
truncated.
If the daemon runs out of memory while loading a volume, it will flush unused
volumes and try again.
This command returns 0 if it succeeds, 1 if \fIvolume_file\fP does not exist,
2 if the daemon cannot read \fIvolume_file\fP, 3 if the daemon runs out of
memory, and 4 for any other error.
.TP
\fBsigmet_raw\fP \fBlist\fP
Prints a list of currently loaded volumes, their user counts, and whether they
are complete or truncated.
.TP
\fBsigmet_raw\fP \fBrelease\fP \fIvolume_file\fP
Decrements the user count associated with the Sigmet volume obtained from
\fIvolume_file\fP. When user count reaches \fB0\fP, storage associated with
the volume becomes available for new volumes.  Every call to
\fBsigmet_raw\fP\ \fBread\fP should have a corresponding call to
\fBsigmet_raw\fP\ \fBrelease\fP
.TP
\fBsigmet_raw\fP \fBflush\fP
Removes unused volumes from memory.  This command returns 0 if it removes
any volumes.
.TP
\fBsigmet_raw\fP \fBvolume_headers\fP \fIvolume_file\fP
Prints volume headers for
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
Ray headers and data are not printed.  Output lines have form:
.sp 1
.ti +4
\fIvalue\fP \fB|\fP \fIhierarchy\fP \fB|\fP \fIdescriptor\fP
.sp 1
In this context, \fIhierarchy\fP refers to the Sigmet data
structures that contain the member.  For a hierarchy with two
levels, it would look like
.sp 1
.ti +4
\fI<struct1>.<struct2>.member\fP.
.sp 1
Be aware that the same member might reside in several structure
hierarchies.  See the IRIS Programmer's Manual for details.
.TP
\fBsigmet_raw\fP \fBvol_hdr\fP \fIvolume_file\fP
Prints a short list of commonly used volume headers.  Output will look like:
.nf

    \fBsite_name\fP="\fIsite_name_from_setup\fP"
    \fBradar_lon\fP=\fIlongitude_degrees\fP
    \fBradar_lat\fP=\fIlatitude_degrees\fP
    \fBtask_name\fP="\fItask_name\fP"
    \fBtypes\fP="\fItype_name\fP \fItype_name\fP ..."
    \fBnum_sweeps\fP=\fIinteger\fP
    \fBnum_rays\fP=\fIinteger\fP
    \fBnum_bins\fP=\fIinteger\fP
    \fBrange_bin0\fP=\fIinteger_cm\fP
    \fBbin_step\fP=\fIinteger_cm\fP

.fi
.TP
\fBsigmet_raw\fP \fBnear_sweep\fP \fIangle\fP \fIvolume_file\fP
Prints the index of the sweep whose fixed angle is nearest \fIangle\fP degrees
in the volume from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBray_headers\fP \fIvolume_file\fP
Prints ray times, azimuths, and tilts for
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
Volume headers and data are not printed.
.TP
\fBsigmet_raw\fP \fBdata\fP \fIvolume_file\fP
Prints an ASCII stream of all volume data for 
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
Headers are not printed.
.TP
\fBsigmet_raw\fP \fBdata\fP \fItype\fP \fIvolume_file\fP
Prints an ASCII stream of data for data type \fItype\fP for
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBdata\fP \fItype\fP \fIs\fP \fIvolume_file\fP
Prints an ASCII stream of data for data type \fItype\fP, sweep \fIs\fP.
for the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBdata\fP \fItype\fP \fIs\fP \fIr\fP \fIvolume_file\fP
Prints an ASCII stream of data for data type \fItype\fP, sweep \fIs\fP, ray \fIr\fP
for the volume obtained from \fIvolume_file\fP, which should have been loaded with
a call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBdata\fP \fItype\fP \fIs\fP \fIr\fP \fIb\fP \fIvolume_file\fP
Prints an ASCII stream of data for data type \fItype\fP, sweep \fIs\fP,
ray \fIr\fP, bin \fIb\fP for
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBbin_outline\fP \fIs\fP \fIr\fP \fIb\fP \fIunit\fP \fIvolume_file\fP
Prints the corners of bin \fIs\fP \fIr\fP \fIb\fP for
the volume obtained from \fIvolume_file\fP, which should have been loaded with a
call to \fBsigmet_raw\fP\ \fBread\fP.
The corners will be printed as
"\fIlon1\ lat1 lon2\ lat2 lon3\ lat3 lon4\ lat4\fP".
Angle unit will be radians if \fIunit\fP is \fBradian\fP.
Angle unit will be degrees if \fIunit\fP is \fBdegree\fP.
.TP
\fBsigmet_raw\fP \fBcolors\fP \fIdata_type\fP \fIcolors_file\fP
Sets display colors for Sigmet data type \fIdata_type\fP.  \fIcolors_file\fP
must give an array of data boundaries, \fIbounds\fP, and an array of corresponding
colors, \fIcolors\fP, in the following format:
.nf

    \fBraster\fP \fInum_colors\fP
    \fIbounds[0]\fP \fIcolors[0]\fP
    \fIbounds[1]\fP \fIcolors[1]\fP
    ...
    \fIbounds[num_colors-1]\fP \fIcolors[num_colors-1]\fP
    \fIbounds[num_colors]\fP

.fi
Sequences of spaces, tabs, and newlines are treated as single whitespace characters.
Members of \fIbounds\fP must be float values. The \fIbounds\fP array must be
monotonic.  Members of the \fIcolors\fP array must have the form
\fB#\fP\fIrrggbb\fP, where \fIrr\fP, \fIgg\fP, \fIgg\fP are hexadecimal red, green,
and blue values.
In subsequent displays, a bin (gate) whose value satisfies
bounds[i]\ <=\ value\ <\ bounds[i+1] will be displayed with colors[i].
This command returns 0 if it succeeds, 1 if \fIcolors_file\fP is inaccessible or
corrupt, 2 if the daemon runs out of memory, and 3 for any other error.
.TP
\fBsigmet_raw\fP \fBbintvls\fP \fItype\fP \fIs\fP \fIvolume_file\fP
Assigns bins (gates) for data type \fItype\fP, sweep \fIs\fP, in the volume from
\fIvolume_file\fP, to intervals in the current sequence of data bounds.
The volume in \fIvolume_file\fP should have been loaded with a call to
\fBsigmet_raw\fP\ \fBread\fP.  The data bounds for the data type should have
been set with a call to \fBbounds\fP.
For each bin with a data value in the current bounds
sequence, there will be one line in standard output, of form:
.nf
i: r b
.fi
where \fIi\fP specifies an index from the sequence of data bounds, and \fIr\fP and
\fIb\fP specify a bin whose value satisfies bounds[i]\ <=\ value\ <\ bounds[i+1].
.TP
\fBsigmet_raw\fP \fBradar_lon\fP \fIlon\fP \fIvolume_file\fP
Sets radar longitude to \fIlon\fP degrees.
.TP
\fBsigmet_raw\fP \fBradar_lat\fP \fIlat\fP \fIvolume_file\fP
Sets radar latitude to \fIlat\fP degrees.
.TP
\fBsigmet_raw\fP \fBshift_az\fP \fIangle\fP \fIvolume_file\fP
Adds \fIangle\fP degrees to all azimuths in the volume obtained from \fIvolume_file\fP.
.TP
\fBsigmet_raw\fP \fBproj\fP \fIargs ...\fP
Sets the cartographic projection. \fIargs ...\fP should define a cartographic
projection known to the Unix \fBproj\fP command.
.TP
\fBsigmet_raw\fP \fBimg_app\fP \fIpath\fP
Identifies the external application that the \fBimg\fP subcommand will use
to generate images. \fBpath\fP should give the name of an executable that reads
image information from standard input and generates an image file. The daemon will
send information to the image generating process as a stream of \fBxdr\fP encoded
values.  Daemon output/image process input will have the following values in the
order given:
.nf

    unsigned int     - number of chars in image file name, excluding \fBnul\fP.
    string           - image file name
    unsigned int     - image width, pixels
    unsigned int     - image height, pixels
    double           - real (map) coordinate of left edge of image
    double           - real (map) coordinate of right edge of image
    double           - real (map) coordinate of top edge of image
    double           - real (map) coordinate of bottom edge of image
    double           - image alpha channel, in range [0.0,1.0]
    unsigned int     - number of colors
    For each color:
        unsigned int - red value for color, in range [0,256)
        unsigned int - green value for color, in range [0,256)
        unsigned int - blue value for color, in range [0,256)
    For each polygon (gate):
        unsigned int - color index
        unsigned int - number of points (always 4)
        For each point:
            double   - real (map) coordinate of vertex abscissa
            double   - real (map) coordinate of vertex ordinate

.fi
.TP
\fBsigmet_raw\fP \fBimg_sz\fP \fIn\fP
Sets the size of images created with the \fBimg\fP subcommand to \fIn\fP pixels.
.TP
\fBsigmet_raw\fP \fBalpha\fP \fIa\fP
Sets the alpha value of images created with the \fBimg\fP subcommand to \fIa\fP.
Alpha value can range from \fB0.0\fP (transparent) to \fB1.0\fP (opaque).
.TP
\fBsigmet_raw\fP \fBimg_name\fP \fItype\fP \fIs\fP \fIvolume_file\fP
Prints the name of the file which the \fBimg\fP subcommand will create for data
type \fItype\fP, sweep \fIs\fP in the volume obtained from \fIvolume_file\fP,
which should have been loaded with a call to \fBsigmet_raw\fP\ \fBread\fP.
.TP
\fBsigmet_raw\fP \fBimg\fP \fItype\fP \fIs\fP \fIvolume_file\fP
Makes an image for data type \fItype\fP, sweep \fIs\fP in the volume obtained
from \fIvolume_file\fP, which should have been loaded with a call to
\fBsigmet_raw\fP\ \fBread\fP. This command fails if the image file
already exists.
.SH SEE ALSO
sigmet (3), IRIS Programmer's Manual (http://sigmet.com)
.br
proj (1), pj_init (3), Cartographic Projection Procedures for the UNIX
Environment --A User's Manual, (Evenden, 1990, Open-file report 90-284).
.br
xdr (3), RFC4506
.SH AUTHOR
Gordon Carrie (dev0@trekix.net)
