.\"
.\" Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\"     * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer in the
.\"     documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"
.\" Please address questions and feedback to dev0@trekix.net
.\"
.\" $Revision: 1.39 $ $Date: 2013/01/18 23:07:19 $
.\"
.Dd $Mdocdate$
.Dt SIGMET_RAW 1
.Os Unix
.Sh NAME
.Nm sigmet_raw
.Nd interact with data from Sigmet raw volumes
.Sh SYNOPSIS
.Nm sigmet_raw
.Op Ar raw_product_file
.Op Ar command_file
.Sh DESCRIPTION
If called without arguments,
.Nm sigmet_raw
prints version and usage information.
Otherwise,
.Nm sigmet_raw
reads
.Ar raw_product_file ,
which must be a file that contains a Sigmet raw product volume, into memory. If
.Ar raw_product_file
ends with
.Qq .gz ,
it must be a raw product file compressed with
.Nm gzip .
If
.Ar raw_product_file
ends with
.Qq .bz2 ,
it must be a raw product file compressed with
.Nm bzip2 .
Once the volume is loaded,
.Nm sigmet_raw
reads commands from
.Ar command_file
if given, standard input otherwise. The commands are described below in COMMANDS.
If
.Nm sigmet_raw
reads commands from standard input, or if
.Ar command_file
is a regular file, the process exits at end of file, or if it reads an
.Cm exit
command. If
.Ar command_file
is a fifo (see
.Xr mkfifo 1 )
then the
.Nm sigmet_raw
process runs until it reads an
.Cm exit
command. If the fifo is deleted, the
.Nm sigmet_raw
process will continue running until terminated with a signal.
.Sh COMMANDS
.Bl -tag -width open
.It Cm commands
Prints a list of accepted commands.
.It Cm open Ar path
Tells
.Nm sigmet_raw
to send output to
.Ar path .
Default is to write to standard output. If
.Nm sigmet_raw
is writing to a file specified in a previous call to
.Cm open ,
the previous file is closed.
.It Cm close
Closes a file opened with an earlier call to
.Cm open ,
if any. Subsequent output goes to standard out.
.Cm exit
Tells the
.Nm sigmet_raw
process to exit.
.It Cm data_types
Prints a list of Sigmet data types. This includes Sigmet data types from the
Iris Programmer's Manual and any additional data types added to the volume.
Output lines will have form:
.Bd -literal -offset indent
\fIDB_field\fP | \fIDescription\fP | \fIunit\fP
\fIDB_field2\fP | \fIDescription2\fP | \fIunit\fP

.Ed
.It Cm volume_headers
Prints volume headers.  Values are those obtained from product header and ingest
data header of the raw file.  Ray headers and data are not printed.  Output lines
have form:
.Bd -filled
    \fIvalue\fP \fB|\fP \fIhierarchy\fP \fB|\fP \fIdescriptor\fP

.Ed
In this context, hierarchy refers to the Sigmet data
structures described in the IRIS Programmer's Manual that contain the member,
e.g.
.Bd -filled
    \fI<ingest_header>.<ingest_configuration>.num_sweeps\fP

.Ed
This format is easy for other processes to filter and manipulate, but hard to
read on a screen. For a more readable list, filter with something like:
.Bd -filled
    awk -F\ \&| '{printf "%s = %s\\n %s\\n\\n", $2, $1, $3}'

.Ed
Be aware that the same member might reside in several structure
hierarchies. See the IRIS Programmer's Manual for details.
.It Cm vol_hdr
Prints commonly used volume headers. Output will look like:
.Bd -filled
    \fBsite_name\fP="\fIsite_name_from_setup\fP"
    \fBradar_lon\fP=\fIlongitude_degrees\fP
    \fBradar_lat\fP=\fIlatitude_degrees\fP
    \fBtask_name\fP="\fItask_name\fP"
    \fBtypes\fP="\fItype_name\fP \fItype_name\fP ..."
    \fBnum_sweeps\fP=\fIinteger\fP
    \fBnum_rays\fP=\fIinteger\fP
    \fBnum_bins\fP=\fIinteger\fP
    \fBrange_bin0\fP=\fIinteger_cm\fP
    \fBbin_step\fP=\fIinteger_cm\fP

.Ed
.It Cm near_sweep Ar angle
Prints the index (base zero) of the sweep with sweep angle nearest
.Ar angle
degrees.
.It Cm sweep_headers
Lists times and angle for each sweep, as reported by the sweep headers in the
volume. For each sweep, this command prints a line of form:
.Bd -filled
    \fBsweep\fP \fIindex\fP \fIYYYY\fP\fB/\fP\fIMM\fP\fB/\fP\fIDD\fP \fIHH\fP\fB:\fP\fIMM\fP\fB:\fP\fISS\fP   \fIangle\fP
.Ed
Unusable sweep time is printed as:
\fI0000\fP\fB/\fP\fI00\fP\fB/\fP\fI00\fP \fI00\fP\fB:\fP\fI00\fP\fB:\fP\fI00\fP
.It Cm ray_headers
Prints ray times and beginning and ending azimuths and tilts for all rays
in the volume. For each ray, this command prints a line of form:
.Bd -filled
    \fBsweep\fP\ \fIindex\fP\ \fBray\fP\ \fIindex\fP\ |\ \fIYYYY\fP/\fIMM\fP/\fIDD\fP\ \fIHH\fP:\fIMM\fP:\fISS.SSS\fP\ |\ \fBaz\fP\ \fIstart\fP\ \fIend\fP\ |\ \fBtilt\fP\ \fIstart\fP\ \fIend\fP
.Ed
.It
.Xo
.Cm new_field
.Ar data_type
.Op Fl v Ar value
.Op Fl d Ar description
.Op Fl v Ar unit
.Xc
Adds a field named
.Ar data_type
to the volume.
Optional
.Ar description
describes the new field.
Optional
.Ar unit
provides a unit. This is not implicitly used in any calculation. If no
.Ar value
is given, all bins are set
.Dv NAN
in the new field.  If present,
.Ar value
is interpreted as follows:
.Bl -ohang -offset indent
.It Ar scalar
All bins are set to
.Ar scalar .
.It Cm r_beam
Each bin value is set to distance in meters along the beam.
.It Ar data_type
Values from field
.Ar data_type ,
which must already exist in the volume, are copied to the new field.
.El
.It Cm del_field Ar data_type
Removes the specified field from the volume.
.It Cm size
Prints the amount of memory in bytes the volume is using for headers and data.
.It Cm set_field Ar data_type Ar value
Assigns a value to a field.
.Ar value
must be one of
.Bl -ohang -offset indent
.It Ar scalar
All bin values are set to
.Ar scalar .
.It Cm r_beam
Each bin value is set to distance in meters along the beam.
.El
.It Cm add Ar data_type Ar value
Adds a value or values to the field of
.Ar data_type .
The sums replace the original bin values for
.Ar data_type ,
which are lost.
.Ar value
must be one of:
.Bl -ohang -offset indent
.It Ar scalar
All bin values for field
.Ar data_type
are incremented by
.Ar scalar .
.It Ar data_type2
For each bin, the value of the
.Ar data_type
field is incremented by the bin's
.Ar data_type2
value. A field of
.Ar data_type2
must already exist in the volume.
.El
.It Cm sub Ar data_type Ar value
Subtracts a value or values from the field of
.Ar data_type .
The differences replace the original bin values for
.Ar data_type ,
which are lost.
.Ar value
must be one of
.Bl -ohang -offset indent
.It Ar scalar
All bin values for field
.Ar data_type
are decremented by
.Ar scalar .
.It Ar data_type2
For each bin, the value of the
.Ar data_type
field is decremented by the bin's
.Ar data_type2 ,
value. A field of
.Ar data_type2
must already exist in the volume.
.El
.It Cm mul Ar data_type Ar value
Multiplies the field of
.Ar data_type
by a value or values. The products replace the original bin values for
.Ar data_type ,
which are lost.
.Ar value
must be one of:
.Bl -ohang -offset indent
.It Ar scalar
All bin values are multiplied by
.Ar scalar .
.It Ar data_type2
For each bin, the value of the
.Ar data_type
field is multiplied by the value for the
.Ar data_type2
field. A field of
.Ar data_type2
must already exist in the volume.
.El
.It Cm div Ar data_type Ar value
Divides the field of
.Ar data_type
by a value or values. The quotients replace the original bin values for
.Ar data_type ,
which are lost.
.Ar value
must be one of:
.Bl -ohang -offset indent
.It Ar scalar
All bin values are divided by
.Ar scalar .
.It Ar data_type2
For each bin, the value of the
.Ar data_type
field is divided by the value for the
.Ar data_type2
field. A field of
.Ar data_type2
must already exist in the volume.
.El
.It Cm log10 Ar data_type
In each bin, replaces the
.Ar data_type
value with its common logarithm.
.It Cm incr_time
Adds
.Ar dt
seconds to all times in the volume, sweep, and ray headers.
.It Cm data
Prints all bin values for the volume as text.
.It Cm data Ar data_type
Prints all bin values for
.Ar data_type
as text.
.It Cm data Ar data_type Ar s
Prints all bin values for sweep
.Ar s ,
field
.Ar data_type
as text.
.It Xo
.Cm data
.Ar data_type
.Ar s
.Ar r
.Xc
Prints all bin values for ray
.Ar r ,
sweep
.Ar s ,
field
.Ar data_type
as text.
.It Xo
.Cm data
.Ar data_type
.Ar s
.Ar r
.Ar b
.Xc
Prints the value of bin
.Ar b ,
ray
.Ar r ,
sweep
.Ar s ,
field
.Ar data_type
as text.
.It Cm bdata Ar data_type Ar s
Prints data for field
.Ar data_type ,
sweep index
.Ar s ,
as a binary stream. Output will have dimensions ray by bin.
Values will be native floats. Missing values will
.Dv NAN .
.It Xo
.Cm bin_outline Ar s Ar r Ar b
.Xc
Prints the corner coordinates of sweep
.Ar s ,
ray
.Ar r ,
bin
.Ar b .
Output will be of form:
.Bd -offset indent
\fIx1 y1 x2 y2 x3 y3 x4 y4\fP
.Ed
.Pp
If the sweep is a PPI, x and y are map coordinates, in meters. The default map
projection is Cylindrical Equidistant with origin and no distortion at the radar.
This can be overridden with the
.Ev SIGMET_GEOG_PROJ
environment variable, which must contain a string readable to the
.Fn GeogProjSetFmStr
function. See
.Xr geog_proj 3 .
.Pp
If the sweep is an RHI, x denotes distance along the ground in meters to the
point under the bin, and y denotes height in meters above the ground, using
four thirds rule.
.It Cm sweep_bnds Ar s
Prints sweep bounds for sweep
.Ar s .
Output has form:
.Bd -offset indent
\fBx_min\fP \fIvalue\fP \fBx_max\fP \fIvalue\fP \fBy_min\fP \fIvalue\fP \fBy_max\fP \fIvalue\fP
.Ed
.Pp
If the sweep is a PPI, values are map coordinates, in meters. The default map
projection is Cylindrical Equidistant with origin and no distortion at the
radar. This can be overridden with the
.Ev SIGMET_GEOG_PROJ
environment variable, which must contain a string readable to the
.Fn GeogProjSetFmStr
function. See
.Xr geog_proj 3 .
.Pp
If the sweep is an RHI, x_min is always 0.0. x_max denotes distance along the
ground in meters to the point under the farthest bin. y_min is always 0.0.
y_max denotes height in meters above the ground of the highest bin, using four
thirds rule.
.It Cm radar_lon Ar Op lon
If present, sets the radar longitude to
.Ar lon
degrees. In either case, prints radar longitude in degrees.
.It Cm radar_lat Ar Op lat
If present, sets the radar latitude to
.Ar lat
degrees. In either case, prints radar latitude in degrees.
.It Cm shift_az
Adds
.Ar daz
degrees to all azimuths in the volume.
.It Cm dorade Op s
Creates DORADE sweep files. If
.Ar s
is absent or
.Qq all ,
this command will make DORADE sweep files for all sweeps in the volume.
Otherwise, it will make one sweep file for sweep
.Ar s .
.It Xo
.Cm outlines
.Op Fl f
.Ar data_type
.Ar color_file
.Ar s
.Xc
Prints outlines of bins for data type
.Ar data_type
grouped into data intervals with associated colors specified in
.Ar color_file
for the sweep with base 0 index
.Ar s .
.Ar color_file
must be a text file of form:
.Bd -offset indent
 \fInum_colors\fP
 \fIbound\fP \fIcolor\fP
 \fIbound\fP \fIcolor\fP
 ...
 \fIbound\fP \fIcolor\fP
 \fIbound\fP

.Ed
.Ar num_colors
must be an integer specifying the number of colors.
The first bound must be a float value or
.Dv -inf
indicating no lower bound for the first interval.
The last bound must be a float value or
.Dv inf
indicating no upper bound for the last interval. All other bounds must be
float values.  Bounds must be monotonically increasing.
Each
.Ar color
must be a character string. If
.Dv none
the data interval will be skipped. Otherwise, the string is simply
passed as is to output.  For each color, output will contain one line of form:
.Bd -offset indent
 \fBcolor\fP \fIcolor\fP

.Ed
After the color specifier, the command prints the outlines of bins whose
value for
.Ar data_type
is in the interval,
.Ar previous_bound
.Ms <=
.Ar bin_value
.Ms <
.Ar next_bound .
The outline of each bin will be on a separate line of form:
.Bd -offset indent
 \fBgate\fP \fIx1\fP \fIy1\fP \fIx2\fP \fIy2\fP \fIx3\fP \fIy3\fP \fIx4\fP \fIy4\fP
.Ed
.Pp
If the sweep is a PPI, values are map coordinates, in meters. The default map
projection is Cylindrical Equidistant with origin and no distortion at the
radar. This can be overridden with the
.Ev SIGMET_GEOG_PROJ
environment variable, which must contain a string readable to the
.Fn GeogProjSetFmStr
function. See
.Xr geog_proj 3 .
.Pp
If the sweep is an RHI, x denotes distance along the ground in meters to the
point under the bin, and y denotes height in meters above the ground, using
four thirds rule.
.Pp
Bin outlines are right handed polygons.
.Pp
If
.Fl f
is present, outlines are expanded so that they touch, if necessary.
Otherwise, the bin outline stated in the file is used, which might
result in gaps between adjacent bins.
.It Cm dorade Op s
Writes DORADE sweep files for the volume in the current working directory.
Option
.Ar s
specifies a sweep to write, otherwise sweep files are written for all sweeps
in the volume.
.El
.Sh SEE ALSO
.Xr sigmet_data 3 ,
.Xr sigmet_vol 3
.Rs
.%B IRIS Programmer's Manual
.Re
.Sh AUTHOR
Gordon Carrie (dev0@trekix.net)
